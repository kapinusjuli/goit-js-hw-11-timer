{"version":3,"sources":["js/timer.js"],"names":["daysValue","document","querySelector","hoursValue","minsValue","secsValue","clockFace","console","log","CountdownTimer","targetDate","start","setInterval","currentTime","Date","now","GetTimeComponents","days","hours","mins","secs","updateClockFace","pad","value","String","padStart","time","Math","floor","textContent","selector"],"mappings":";AAuDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAvDA,IAAMA,EAAYC,SAASC,cAAc,2BACnCC,EAAaF,SAASC,cAAc,4BACpCE,EAAYH,SAASC,cAAc,2BACnCG,EAAYJ,SAASC,cAAc,2BACnCI,EAAYL,SAASC,cAAc,YAEzCK,QAAQC,IAAIF,GAING,IAAAA,EAAAA,WACwB,SAAA,EAAA,GAAdC,IAAAA,EAAAA,EAAAA,WAAc,EAAA,KAAA,GACrBA,KAAAA,WAAaA,EACbC,KAAAA,QA0CT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAtCU,MAAA,WAAA,IAAA,EAAA,KACNC,YAAY,WACJC,IAAAA,EAAcC,KAAKC,MAGWC,EAAAA,EADvB,EAAKN,WAAaG,GACvBI,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAE3BC,EAAgB,CAAEJ,KAAAA,EAAMC,MAAAA,EAAOC,KAAAA,EAAMC,KAAAA,IACrCb,QAAQC,IAAOS,GAAAA,OAAAA,EAASC,MAAAA,OAAAA,EAAUC,MAAAA,OAAAA,EAASC,MAAAA,OAAAA,KAC1C,SA6BP,EA7CMX,GAsBN,SAASa,EAAIC,GACJC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnC,SAAST,EAAkBU,GAQlB,MAAA,CAAET,KAPIK,EAAIK,KAAKC,MAAMF,EAAQ,QAOrBR,MANDI,EACZK,KAAKC,MAAOF,EAAQ,MAAyB,OAKzBP,KAHTG,EAAIK,KAAKC,MAAOF,EAAQ,KAAoB,MAG7BN,KADfE,EAAIK,KAAKC,MAAOF,EAAQ,IAAc,OAIrD,SAASL,EAA6C,GAA3BJ,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAE5CpB,EAAU6B,YAAiBZ,GAAAA,OAAAA,GAC3Bd,EAAW0B,YAAiBX,GAAAA,OAAAA,GAC5Bd,EAAUyB,YAAiBV,GAAAA,OAAAA,GAC3Bd,EAAUwB,YAAiBT,GAAAA,OAAAA,GAG7B,IAAIX,EAAe,CACjBqB,SAAU,WACVpB,WAAY,IAAII,KAAK","file":"timer.dd69fdab.js","sourceRoot":"..\\src","sourcesContent":["const daysValue = document.querySelector('span[data-value=\"days\"]');\r\nconst hoursValue = document.querySelector('span[data-value=\"hours\"]');\r\nconst minsValue = document.querySelector('span[data-value=\"mins\"]');\r\nconst secsValue = document.querySelector('span[data-value=\"secs\"]');\r\nconst clockFace = document.querySelector('#timer-1');\r\n\r\nconsole.log(clockFace);\r\n\r\n// const targetDate = new Date(2021, 1, 1, 0, 0, 0, 0);\r\n\r\nclass CountdownTimer {\r\n  constructor({ targetDate }) {\r\n    this.targetDate = targetDate;\r\n    this.start();\r\n  }\r\n\r\n  // const timer = {\r\n  start() {\r\n    setInterval(() => {\r\n      const currentTime = Date.now();\r\n\r\n      const time = this.targetDate - currentTime;\r\n      const { days, hours, mins, secs } = GetTimeComponents(time);\r\n      //   console.log('delta: ', time);\r\n      updateClockFace({ days, hours, mins, secs });\r\n      console.log(`${days}::${hours}::${mins}::${secs}`);\r\n    }, 1000);\r\n  }\r\n}\r\n// }\r\n// timer.start();\r\n\r\nfunction pad(value) {\r\n  return String(value).padStart(2, '0');\r\n}\r\n\r\nfunction GetTimeComponents(time) {\r\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n  const hours = pad(\r\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n  );\r\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n\r\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\r\n  return { days, hours, mins, secs };\r\n}\r\n\r\nfunction updateClockFace({ days, hours, mins, secs }) {\r\n  // clockFace.textContent = `${days}:${hours}:${mins}:${secs}`;\r\n  daysValue.textContent = `${days}`;\r\n  hoursValue.textContent = `${hours}`;\r\n  minsValue.textContent = `${mins}`;\r\n  secsValue.textContent = `${secs}`;\r\n}\r\n\r\nnew CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 17, 2021'),\r\n});\r\n"]}